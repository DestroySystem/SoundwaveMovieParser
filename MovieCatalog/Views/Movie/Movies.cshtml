@using EFCoreData.Models
@model Dictionary<string, List<string>>;
@{
    ViewData["Title"] = "Movie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<section id="hero" class="about">
    <div class="container">

        <div class="row">
            <div class="col-lg-2 order-1 order-lg-2" data-aos="zoom-in" data-aos-delay="150">
                <div class="dropdown-menu-dark">
                    @foreach(string category in Model.Keys)
                    {
                        <button class="btn btn-get-started dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">@Html.Raw(category)</button>
                    }

                </div>
            </div>
        </div>
    </div>
</section>*@


<section id="hero" class="about">
    <div class="container">
        <div class="row">
            <div class="dropdown">
                @foreach (string category in Model.Keys)
                {
                    <button class="btn btn-get-started dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">@Html.Raw(category)</button>
                    <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton">
                        <li>
                            @foreach (string genre in Model[category])
                            {
                                <a class="dropdown-item" asp-controller="Movie" asp-action="Movies" asp-route-category="@category" asp-route-genre="@genre">@Html.Raw(genre)</a>
                            }
                        </li>
                    </ul>
                }
            </div>
        </div>
    </div>
</section>